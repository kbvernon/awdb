[{"path":"https://kbvernon.github.io/awdb/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 awdb authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kbvernon.github.io/awdb/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kenneth Blake Vernon. Author, maintainer, copyright holder.","code":""},{"path":"https://kbvernon.github.io/awdb/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vernon K (2025). awdb: Query USDA NWCC Air Water Database REST API. R package version 0.1.1, https://github.com/kbvernon/awdb.","code":"@Manual{,   title = {awdb: Query the USDA NWCC Air and Water Database REST API},   author = {Kenneth Blake Vernon},   year = {2025},   note = {R package version 0.1.1},   url = {https://github.com/kbvernon/awdb}, }"},{"path":"https://kbvernon.github.io/awdb/index.html","id":"awdb","dir":"","previous_headings":"","what":"Query the USDA NWCC Air and Water Database REST API","title":"Query the USDA NWCC Air and Water Database REST API","text":"awdb package provides functions querying four endpoints Air Water Database (AWDB) REST API maintained National Water Climate Center (NWCC) United States Department Agriculture (USDA). Endpoints include data, forecast, reference-data, metadata. package extremely light weight, Rust via extendr heavy lifting deserialize flatten deeply nested JSON responses. package also designed support pretty printing tibbles import tibble package.","code":""},{"path":"https://kbvernon.github.io/awdb/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Query the USDA NWCC Air and Water Database REST API","text":"can install release version awdb CRAN : can get development version GitHub :","code":"install.packages(\"awdb\") # install.packages(\"pak\") pak::pak(\"kbvernon/awdb\")"},{"path":"https://kbvernon.github.io/awdb/index.html","id":"the-awdb-rest-api","dir":"","previous_headings":"","what":"The AWDB REST API","title":"Query the USDA NWCC Air and Water Database REST API","text":"package provides separate function query endpoint USDA AWDB REST API: API provide spatial queries, requests made areas interest (aoi) first ask API metadata endpoint stations database spatial coordinates. converts set sf object, performs spatial filter aoi, sends another request elements forecasts stations aoi.","code":""},{"path":"https://kbvernon.github.io/awdb/index.html","id":"get-stations","dir":"","previous_headings":"","what":"Get Stations","title":"Query the USDA NWCC Air and Water Database REST API","text":"Find AWDB stations around Bear Lake northern Utah measure soil moisture percent various depths.","code":"library(awdb) library(sf) library(tibble)  stations <- get_stations(bear_lake, elements = \"SMS:*\")  stations #> Simple feature collection with 9 features and 14 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -111.6296 ymin: 41.68541 xmax: -111.1663 ymax: 42.4132 #> Geodetic CRS:  WGS 84 #> # A tibble: 9 × 15 #>   station_triplet station_id state_code network_code name   dco_code county_name #>   <chr>           <chr>      <chr>      <chr>        <chr>  <chr>    <chr>       #> 1 374:UT:SNTL     374        UT         SNTL         Bug L… UT       Rich        #> 2 484:ID:SNTL     484        ID         SNTL         Frank… UT       Franklin    #> 3 1114:UT:SNTL    1114       UT         SNTL         Garde… UT       Cache       #> 4 493:ID:SNTL     493        ID         SNTL         Giveo… ID       Bear Lake   #> 5 1115:UT:SNTL    1115       UT         SNTL         Klond… UT       Cache       #> 6 1013:UT:SNTL    1013       UT         SNTL         Templ… UT       Cache       #> 7 823:UT:SNTL     823        UT         SNTL         Tony … UT       Cache       #> 8 1113:UT:SNTL    1113       UT         SNTL         Tony … UT       Cache       #> 9 1098:UT:SNTL    1098       UT         SNTL         Usu D… UT       Rich        #> # ℹ 8 more variables: huc <chr>, elevation <dbl>, data_time_zone <dbl>, #> #   pedon_code <chr>, shef_id <chr>, begin_date <chr>, end_date <chr>, #> #   geometry <POINT [°]>"},{"path":"https://kbvernon.github.io/awdb/index.html","id":"get-elements","dir":"","previous_headings":"","what":"Get Elements","title":"Query the USDA NWCC Air and Water Database REST API","text":"USDA NWCC refers soil, snow, stream, weather variables measured AWDB stations “elements.” get snow water equivalent soil moisture measurements around Bear Lake early May 2015. time series, element values come list column containing data.frames least date value columns. Using tidyr::unnest() helpful unpacking .","code":"elements <- get_elements(   bear_lake,   elements = c(\"WTEQ\", \"SMS:8\"),   awdb_options = set_options(     begin_date = \"2015-05-01\",     end_date = \"2015-05-07\"   ) )  elements[c(   \"station_triplet\",   \"element_code\",   \"element_values\" )] #> # A tibble: 10 × 3 #>    station_triplet element_code element_values   #>    <chr>           <chr>        <list>           #>  1 374:UT:SNTL     WTEQ         <tibble [7 × 2]> #>  2 471:ID:SNTL     WTEQ         <tibble [7 × 2]> #>  3 484:ID:SNTL     WTEQ         <tibble [7 × 2]> #>  4 1114:UT:SNTL    WTEQ         <tibble [7 × 2]> #>  5 493:ID:SNTL     WTEQ         <tibble [7 × 2]> #>  6 1115:UT:SNTL    WTEQ         <tibble [7 × 2]> #>  7 1013:UT:SNTL    WTEQ         <tibble [7 × 2]> #>  8 823:UT:SNTL     WTEQ         <tibble [7 × 2]> #>  9 1113:UT:SNTL    WTEQ         <tibble [7 × 2]> #> 10 1098:UT:SNTL    WTEQ         <tibble [7 × 2]>  elements[[\"element_values\"]][[1]] #> # A tibble: 7 × 2 #>   date       value #>   <chr>      <dbl> #> 1 2015-05-01   2.1 #> 2 2015-05-02   1.1 #> 3 2015-05-03   0   #> 4 2015-05-04   0   #> 5 2015-05-05   0   #> 6 2015-05-06   0   #> 7 2015-05-07   0"},{"path":"https://kbvernon.github.io/awdb/index.html","id":"get-forecasts","dir":"","previous_headings":"","what":"Get Forecasts","title":"Query the USDA NWCC Air and Water Database REST API","text":"Get streamflow forecasts Cascades west central Oregon. get_elements(), returns list column.","code":"forecasts <- get_forecasts(cascades, elements = \"SRVO\")  forecasts[c(   \"station_triplet\",   \"element_code\",   \"publication_date\",   \"forecast_period\",   \"forecast_values\" )] #> # A tibble: 63 × 5 #>    station_triplet element_code publication_date forecast_period forecast_values #>    <chr>           <chr>        <chr>            <chr>           <list>          #>  1 14050000:OR:US… SRVO         2025-01-01 00:00 02-01:07-31     <tibble>        #>  2 14050000:OR:US… SRVO         2025-02-01 00:00 02-01:07-31     <tibble>        #>  3 14050000:OR:US… SRVO         2025-01-01 00:00 02-01:09-30     <tibble>        #>  4 14050000:OR:US… SRVO         2025-02-01 00:00 02-01:09-30     <tibble>        #>  5 14050000:OR:US… SRVO         2025-01-01 00:00 04-01:07-31     <tibble>        #>  6 14050000:OR:US… SRVO         2025-02-01 00:00 04-01:07-31     <tibble>        #>  7 14050000:OR:US… SRVO         2025-01-01 00:00 04-01:09-30     <tibble>        #>  8 14050000:OR:US… SRVO         2025-02-01 00:00 04-01:09-30     <tibble>        #>  9 14053500:OR:US… SRVO         2025-01-01 00:00 02-01:07-31     <tibble>        #> 10 14053500:OR:US… SRVO         2025-02-01 00:00 02-01:07-31     <tibble>        #> # ℹ 53 more rows  forecasts[[\"forecast_values\"]][[1]] #> # A tibble: 5 × 2 #>   probability value #>   <chr>       <dbl> #> 1 10             50 #> 2 30             43 #> 3 50             38 #> 4 70             34 #> 5 90             28"},{"path":"https://kbvernon.github.io/awdb/index.html","id":"get-references","dir":"","previous_headings":"","what":"Get References","title":"Query the USDA NWCC Air and Water Database REST API","text":"somewhat unique endpoint REST API called “References.” ever worked government employees military, maybe aware prefer extremely condensed form speech jammed full acronyms codes. references endpoint helps clarify cryptic language data dictionaries explain code used database actually means. also process provides exhaustive list available options. , can access get_references(). instance, want table showing possible station elements AWDB, simple .","code":"get_references(\"elements\") #> # A tibble: 115 × 9 #>    code  name     physical_element_name function_code data_precision description #>    <chr> <chr>    <chr>                 <chr>                  <int> <chr>       #>  1 TAVG  AIR TEM… air temperature       V                          1 Average Ai… #>  2 TMAX  AIR TEM… air temperature       X                          1 Maximum Ai… #>  3 TMIN  AIR TEM… air temperature       N                          1 Minimum Ai… #>  4 TOBS  AIR TEM… air temperature       C                          1 Instantane… #>  5 PRES  BAROMET… barometric pressure   C                          2 Barometric… #>  6 BATT  BATTERY  battery               C                          2 Battery Vo… #>  7 BATV  BATTERY… battery               V                          2 <NA>        #>  8 BATX  BATTERY… battery               X                          2 Maximum Ba… #>  9 BATN  BATTERY… battery               N                          2 Minimum Ba… #> 10 ETIB  BATTERY… battery-eti precip g… C                          2 <NA>        #> # ℹ 105 more rows #> # ℹ 3 more variables: stored_unit_code <chr>, english_unit_code <chr>, #> #   metric_unit_code <chr>"},{"path":"https://kbvernon.github.io/awdb/index.html","id":"additional-query-parameters","dir":"","previous_headings":"","what":"Additional Query Parameters","title":"Query the USDA NWCC Air and Water Database REST API","text":"examples, use set_options() pass additional query parameters. don’t pass arguments, uses defaults assumed AWDB REST API. ’s important note parameters passed every endpoint. references endpoint, example, doesn’t take query parameters reference_type. see goes , can print awdb_options list returned set_options(). also show current values parameter.","code":"set_options() #>  #> ── AWDB Query Parameter Set ──────────────────────────────────────────────────── #> Options passed to each endpoint. #>  #>                           VALUE STATION ELEMENT FORECAST #> networks                      *     [X]     [X]      [X] #> duration                  DAILY     [X]     [X]      [ ] #> begin_date                 NULL     [ ]     [X]      [ ] #> end_date                   NULL     [ ]     [X]      [ ] #> period_reference            END     [ ]     [X]      [ ] #> central_tendency           NULL     [ ]     [X]      [ ] #> return_flags              FALSE     [ ]     [X]      [ ] #> return_original_values    FALSE     [ ]     [X]      [ ] #> return_suspect_values     FALSE     [ ]     [X]      [ ] #> begin_publication_date     NULL     [ ]     [ ]      [X] #> end_publication_date       NULL     [ ]     [ ]      [X] #> exceedence_probabilities   NULL     [ ]     [ ]      [X] #> forecast_periods           NULL     [ ]     [ ]      [X] #> station_names              NULL     [X]     [X]      [X] #> dco_codes                  NULL     [X]     [X]      [X] #> county_names               NULL     [X]     [X]      [X] #> hucs                       NULL     [X]     [X]      [X] #> return_forecast_metadata  FALSE     [X]     [ ]      [ ] #> return_reservoir_metadata FALSE     [X]     [ ]      [ ] #> return_element_metadata   FALSE     [X]     [ ]      [ ] #> active_only                TRUE     [X]     [X]      [X] #> request_size                 10     [ ]     [X]      [X]"},{"path":"https://kbvernon.github.io/awdb/reference/awdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Query the USDA AWDB REST API — awdb","title":"Query the USDA AWDB REST API — awdb","text":"awdb package implements functions interface AWDB REST API R.","code":""},{"path":[]},{"path":"https://kbvernon.github.io/awdb/reference/awdb.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Query the USDA AWDB REST API — awdb","text":"Maintainer: Kenneth Blake Vernon kenneth.b.vernon@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://kbvernon.github.io/awdb/reference/awdb_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Build List of Additional Query Parameters — awdb_options","title":"Build List of Additional Query Parameters — awdb_options","text":"helper function make easier handle additional query parameters. Provides defaults type checking.","code":""},{"path":"https://kbvernon.github.io/awdb/reference/awdb_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build List of Additional Query Parameters — awdb_options","text":"","code":"set_options(   networks = \"*\",   duration = \"daily\",   begin_date = NULL,   end_date = NULL,   period_reference = \"end\",   central_tendency = NULL,   return_flags = FALSE,   return_original_values = FALSE,   return_suspect_values = FALSE,   begin_publication_date = NULL,   end_publication_date = NULL,   exceedence_probabilities = NULL,   forecast_periods = NULL,   station_names = NULL,   dco_codes = NULL,   county_names = NULL,   hucs = NULL,   return_forecast_metadata = FALSE,   return_reservoir_metadata = FALSE,   return_element_metadata = FALSE,   active_only = TRUE,   request_size = 10L )  # S3 method for class 'awdb_options' print(x, ...)"},{"path":"https://kbvernon.github.io/awdb/reference/awdb_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build List of Additional Query Parameters — awdb_options","text":"networks character vector, abbreviations codes station networks interest (e.g., \"USGS\" refers USGS soil monitoring stations). Default *, \"networks\". See Details available networks codes. duration character scalar, temporal resolution element measurements. Available values include daily (default), hourly, semimonthly, monthly, calendar_year, water_year. begin_date character scalar, start date time period interest. Date must format \"YYYY-MM-DD\". end_date character scalar, end date time period interest. Date must format \"YYYY-MM-DD\". period_reference character scalar, reporting convention use returning instantaneous data. Default \"end\". central_tendency character scalar, central tendency return element value. Available options include NULL (default, central tendency returned), median average. return_flags boolean scalar, whether return flags element value. Default FALSE. return_original_values boolean scalar, whether return original element values. Default FALSE. return_suspect_values boolean scalar, whether return suspect element values. Default FALSE. begin_publication_date character scalar, beginning publication period retrieve data. Date must format YYYY-MM-DD. NULL, assumes start current water year. end_publication_date character scalar, end publication period retrieve data. Date must format YYYY-MM-DD. NULL, assumes current day. exceedence_probabilities integer vector, probability streamflow exceed specified level. forecast_periods character vector, time period make streamflow forecasts. station_names character vector, used subset stations names. Default NULL. dco_codes character vector, used subset stations fall specified DCOs. Default NULL. county_names character vector, used subset stations fall specified counties. Default NULL. hucs integer vector, used subset stations fall specified hydrologic units. Default NULL. return_forecast_metadata boolean scalar, whether return forecast metadata station locations. included list column. Default FALSE. return_reservoir_metadata boolean scalar, whether return reservoir metadata station locations. included list column. Default FALSE. return_element_metadata boolean scalar, whether return element metadata station locations. included list column. Default FALSE. active_only boolean scalar, whether include active stations. Default TRUE. request_size integer scalar, number individual stations include query. helps meet rate limits imposed API. getting request error, might try lowering number. Default 10L. x awdb_options list ... ignored","code":""},{"path":"https://kbvernon.github.io/awdb/reference/awdb_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build List of Additional Query Parameters — awdb_options","text":"awdb_options list","code":""},{"path":"https://kbvernon.github.io/awdb/reference/awdb_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build List of Additional Query Parameters — awdb_options","text":"","code":"set_options() #>  #> ── AWDB Query Parameter Set ──────────────────────────────────────────────────── #> Options passed to each endpoint. #>  #>                           VALUE STATION ELEMENT FORECAST #> networks                      *     [X]     [X]      [X] #> duration                  DAILY     [X]     [X]      [ ] #> begin_date                 NULL     [ ]     [X]      [ ] #> end_date                   NULL     [ ]     [X]      [ ] #> period_reference            END     [ ]     [X]      [ ] #> central_tendency           NULL     [ ]     [X]      [ ] #> return_flags              FALSE     [ ]     [X]      [ ] #> return_original_values    FALSE     [ ]     [X]      [ ] #> return_suspect_values     FALSE     [ ]     [X]      [ ] #> begin_publication_date     NULL     [ ]     [ ]      [X] #> end_publication_date       NULL     [ ]     [ ]      [X] #> exceedence_probabilities   NULL     [ ]     [ ]      [X] #> forecast_periods           NULL     [ ]     [ ]      [X] #> station_names              NULL     [X]     [X]      [X] #> dco_codes                  NULL     [X]     [X]      [X] #> county_names               NULL     [X]     [X]      [X] #> hucs                       NULL     [X]     [X]      [X] #> return_forecast_metadata  FALSE     [X]     [ ]      [ ] #> return_reservoir_metadata FALSE     [X]     [ ]      [ ] #> return_element_metadata   FALSE     [X]     [ ]      [ ] #> active_only                TRUE     [X]     [X]      [X] #> request_size                 10     [ ]     [X]      [X]"},{"path":"https://kbvernon.github.io/awdb/reference/datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Datasets — datasets","title":"Datasets — datasets","text":"Arbitrary bounding boxes drawn around potential areas interest.","code":""},{"path":"https://kbvernon.github.io/awdb/reference/datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Datasets — datasets","text":"","code":"bear_lake  cascades"},{"path":"https://kbvernon.github.io/awdb/reference/datasets.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Datasets — datasets","text":"object class sfc_POLYGON (inherits sfc) length 1.","code":""},{"path":"https://kbvernon.github.io/awdb/reference/datasets.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Datasets — datasets","text":"Coordinates digitized manually.","code":""},{"path":"https://kbvernon.github.io/awdb/reference/datasets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Datasets — datasets","text":"Areas interest include: Bear Lake along border Utah Idaho. See location Google Maps. Cascades west central Oregon. See location Google Maps.","code":""},{"path":"https://kbvernon.github.io/awdb/reference/get_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Station Elements — get_elements","title":"Get Station Elements — get_elements","text":"Get station elements  USDA National Water Climate Center Air Water Database REST API. Elements soil, snow, stream, weather variables measured AWDB stations.","code":""},{"path":"https://kbvernon.github.io/awdb/reference/get_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Station Elements — get_elements","text":"","code":"get_elements(aoi = NULL, elements, awdb_options = set_options(), as_sf = FALSE)"},{"path":"https://kbvernon.github.io/awdb/reference/get_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Station Elements — get_elements","text":"aoi sfc POLYGON scalar, area interest used performing spatial filter available stations network. NULL (default), spatial filter performed. elements character vector, abbreviations codes variables interest (e.g., \"SMS\" \"Soil Moisture Percent\"). See Details available elements codes. awdb_options awdb_options list additional query parameters. as_sf boolean scalar, whether return data sf table. Default FALSE. Repeating spatial data across station element time series can costly.","code":""},{"path":"https://kbvernon.github.io/awdb/reference/get_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Station Elements — get_elements","text":"as_sf, sf table, otherwise simple data.frame. number rows depends number stations element parameters. Time series data included list column named \"element_values\".","code":""},{"path":"https://kbvernon.github.io/awdb/reference/get_elements.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Station Elements — get_elements","text":"endpoint accept following query parameters via set_options(): duration begin_date end_date period_reference central_tendency return_flags return_original_values return_suspect_values following can also passed filter stations: station_names dco_codes county_names hucs active_only may also specify networks request_size. networks parameter used internally build unique station triplet identifiers form station:state:network passed endpoint, serves filter stations just networks. request_size parameter handling rate limits, based number elements - hard value measure directly, parameter rule thumb strict standard. processing slow , may find experimenting parameter useful. See set_options() details.","code":""},{"path":"https://kbvernon.github.io/awdb/reference/get_elements.html","id":"element-format","dir":"Reference","previous_headings":"","what":"Element Format","title":"Get Station Elements — get_elements","text":"Elements specified triplets form elementCode:heightDepth:ordinal. part element triplet can contain * wildcard character. heightDepth ordinal optional. unit heightDepth inches. ordinal specified, assumed 1. examples: \"WTEQ\" - return snow water equivalent values. \"SMS:-8\" - return soil moisture values observed 8 inches surface. \"SMS:*\" - return soil moisture values measured depths.","code":""},{"path":"https://kbvernon.github.io/awdb/reference/get_elements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Station Elements — get_elements","text":"","code":"# get snow water equivalent values around Bear Lake get_elements(bear_lake, elements = \"WTEQ\") #> # A tibble: 10 × 11 #>    station_triplet element_code ordinal duration_name data_precision #>    <chr>           <chr>          <int> <chr>                  <int> #>  1 374:UT:SNTL     WTEQ               1 DAILY                      1 #>  2 471:ID:SNTL     WTEQ               1 DAILY                      1 #>  3 484:ID:SNTL     WTEQ               1 DAILY                      1 #>  4 1114:UT:SNTL    WTEQ               1 DAILY                      1 #>  5 493:ID:SNTL     WTEQ               1 DAILY                      1 #>  6 1115:UT:SNTL    WTEQ               1 DAILY                      1 #>  7 1013:UT:SNTL    WTEQ               1 DAILY                      1 #>  8 823:UT:SNTL     WTEQ               1 DAILY                      1 #>  9 1113:UT:SNTL    WTEQ               1 DAILY                      1 #> 10 1098:UT:SNTL    WTEQ               1 DAILY                      1 #> # ℹ 6 more variables: stored_unit_code <chr>, original_unit_code <chr>, #> #   begin_date <chr>, end_date <chr>, derived_data <lgl>, element_values <list>  # return as sf table get_elements(bear_lake, elements = \"WTEQ\", as_sf = TRUE) #> Simple feature collection with 10 features and 11 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -111.6296 ymin: 41.68541 xmax: -111.1663 ymax: 42.4132 #> Geodetic CRS:  WGS 84 #> # A tibble: 10 × 12 #>    station_triplet element_code ordinal duration_name data_precision #>    <chr>           <chr>          <int> <chr>                  <int> #>  1 1013:UT:SNTL    WTEQ               1 DAILY                      1 #>  2 1098:UT:SNTL    WTEQ               1 DAILY                      1 #>  3 1113:UT:SNTL    WTEQ               1 DAILY                      1 #>  4 1114:UT:SNTL    WTEQ               1 DAILY                      1 #>  5 1115:UT:SNTL    WTEQ               1 DAILY                      1 #>  6 374:UT:SNTL     WTEQ               1 DAILY                      1 #>  7 471:ID:SNTL     WTEQ               1 DAILY                      1 #>  8 484:ID:SNTL     WTEQ               1 DAILY                      1 #>  9 493:ID:SNTL     WTEQ               1 DAILY                      1 #> 10 823:UT:SNTL     WTEQ               1 DAILY                      1 #> # ℹ 7 more variables: stored_unit_code <chr>, original_unit_code <chr>, #> #   begin_date <chr>, end_date <chr>, derived_data <lgl>, #> #   element_values <list>, geometry <POINT [°]>"},{"path":"https://kbvernon.github.io/awdb/reference/get_forecasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Station Forecasts — get_forecasts","title":"Get Station Forecasts — get_forecasts","text":"Get station forecasts USDA National Water Climate Center Air Water Database REST API. almost always streamflow forecasts, set elements = \"SRVO\", others also available, albeit extremely limited spatial representation (see Details).","code":""},{"path":"https://kbvernon.github.io/awdb/reference/get_forecasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Station Forecasts — get_forecasts","text":"","code":"get_forecasts(   aoi = NULL,   elements,   awdb_options = set_options(),   as_sf = FALSE )"},{"path":"https://kbvernon.github.io/awdb/reference/get_forecasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Station Forecasts — get_forecasts","text":"aoi sfc POLYGON scalar, area interest used performing spatial filter available stations network. NULL (default), spatial filter performed. elements character vector, abbreviations codes variables interest (e.g., \"SMS\" \"Soil Moisture Percent\"). See Details available elements codes. awdb_options awdb_options list additional query parameters. as_sf boolean scalar, whether return data sf table. Default FALSE. Repeating spatial data across station element time series can costly.","code":""},{"path":"https://kbvernon.github.io/awdb/reference/get_forecasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Station Forecasts — get_forecasts","text":"as_sf, sf table, otherwise simple data.frame. number rows depends number stations element parameters. Time series data included list column named \"forecast_values\".","code":""},{"path":"https://kbvernon.github.io/awdb/reference/get_forecasts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Station Forecasts — get_forecasts","text":"endpoint accept following query parameters via set_options(): begin_publication_date end_publication_date exceedence_probabilities forecast_periods following can also passed filter stations: station_names dco_codes county_names hucs active_only may also specify networks request_size. networks parameter used internally build unique station triplet identifiers form station:state:network passed endpoint, serves filter stations just networks. request_size parameter handling rate limits, based number elements - hard value measure directly, parameter rule thumb strict standard. processing slow , may find experimenting parameter useful. Note duration parameter ignored - , precisely, set NULL. See set_options() details.","code":""},{"path":"https://kbvernon.github.io/awdb/reference/get_forecasts.html","id":"element-format","dir":"Reference","previous_headings":"","what":"Element Format","title":"Get Station Forecasts — get_forecasts","text":"Elements specified triplets form elementCode:heightDepth:ordinal. part element triplet can contain * wildcard character. heightDepth ordinal optional. unit heightDepth inches. ordinal specified, assumed 1. examples: \"WTEQ\" - return snow water equivalent values. \"SMS:-8\" - return soil moisture values observed 8 inches surface. \"SMS:*\" - return soil moisture values measured depths.","code":""},{"path":"https://kbvernon.github.io/awdb/reference/get_forecasts.html","id":"forecast-elements","dir":"Reference","previous_headings":"","what":"Forecast Elements","title":"Get Station Forecasts — get_forecasts","text":"Almost forecasts reported SRVO, adjusted streamflow set accounts upstream operations reservoir operations diversions. JDAY, RESC, REST mostly maintain historical forecasts made Lake Tahoe (birthplace snow survey). general, recommended use SRVO.","code":""},{"path":"https://kbvernon.github.io/awdb/reference/get_forecasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Station Forecasts — get_forecasts","text":"","code":"# get streamflow forecasts get_forecasts(cascades, elements = \"SRVO\") #> # A tibble: 117 × 10 #>    station_triplet  forecast_point_name    element_code forecast_period #>    <chr>            <chr>                  <chr>        <chr>           #>  1 14050000:OR:USGS Deschutes R bl Snow Ck SRVO         02-01:07-31     #>  2 14050000:OR:USGS Deschutes R bl Snow Ck SRVO         02-01:07-31     #>  3 14050000:OR:USGS Deschutes R bl Snow Ck SRVO         02-01:09-30     #>  4 14050000:OR:USGS Deschutes R bl Snow Ck SRVO         02-01:09-30     #>  5 14050000:OR:USGS Deschutes R bl Snow Ck SRVO         03-01:07-31     #>  6 14050000:OR:USGS Deschutes R bl Snow Ck SRVO         03-01:09-30     #>  7 14050000:OR:USGS Deschutes R bl Snow Ck SRVO         04-01:07-31     #>  8 14050000:OR:USGS Deschutes R bl Snow Ck SRVO         04-01:07-31     #>  9 14050000:OR:USGS Deschutes R bl Snow Ck SRVO         04-01:07-31     #> 10 14050000:OR:USGS Deschutes R bl Snow Ck SRVO         04-01:07-31     #> # ℹ 107 more rows #> # ℹ 6 more variables: forecast_status <chr>, issue_date <chr>, #> #   period_normal <dbl>, publication_date <chr>, unit_code <chr>, #> #   forecast_values <list>  # return as sf table get_forecasts(cascades, elements = \"SRVO\", as_sf = TRUE) #> Simple feature collection with 117 features and 10 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -122.8373 ymin: 43.5029 xmax: -121.5028 ymax: 44.2679 #> Geodetic CRS:  WGS 84 #> # A tibble: 117 × 11 #>    station_triplet  forecast_point_name    element_code forecast_period #>    <chr>            <chr>                  <chr>        <chr>           #>  1 14050000:OR:USGS Deschutes R bl Snow Ck SRVO         02-01:09-30     #>  2 14050000:OR:USGS Deschutes R bl Snow Ck SRVO         04-01:07-31     #>  3 14050000:OR:USGS Deschutes R bl Snow Ck SRVO         02-01:09-30     #>  4 14050000:OR:USGS Deschutes R bl Snow Ck SRVO         03-01:07-31     #>  5 14050000:OR:USGS Deschutes R bl Snow Ck SRVO         03-01:09-30     #>  6 14050000:OR:USGS Deschutes R bl Snow Ck SRVO         04-01:09-30     #>  7 14050000:OR:USGS Deschutes R bl Snow Ck SRVO         04-01:07-31     #>  8 14050000:OR:USGS Deschutes R bl Snow Ck SRVO         04-01:07-31     #>  9 14050000:OR:USGS Deschutes R bl Snow Ck SRVO         04-01:07-31     #> 10 14050000:OR:USGS Deschutes R bl Snow Ck SRVO         02-01:07-31     #> # ℹ 107 more rows #> # ℹ 7 more variables: forecast_status <chr>, issue_date <chr>, #> #   period_normal <dbl>, publication_date <chr>, unit_code <chr>, #> #   forecast_values <list>, geometry <POINT [°]>"},{"path":"https://kbvernon.github.io/awdb/reference/get_references.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Data Dictionary — get_references","title":"Get Data Dictionary — get_references","text":"Get references USDA National Water Climate Center Air Water Database REST API. References provide descriptions codes used AWDB.","code":""},{"path":"https://kbvernon.github.io/awdb/reference/get_references.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Data Dictionary — get_references","text":"","code":"get_references(reference_type = \"elements\")"},{"path":"https://kbvernon.github.io/awdb/reference/get_references.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Data Dictionary — get_references","text":"reference_type character scalar, name reference. Potential values include dcos, durations, elements (default), forecastPeriods, functions, instruments, networks, physicalElements, states, units.","code":""},{"path":"https://kbvernon.github.io/awdb/reference/get_references.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Data Dictionary — get_references","text":"data.frame reference data","code":""},{"path":"https://kbvernon.github.io/awdb/reference/get_references.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Data Dictionary — get_references","text":"","code":"get_references(\"elements\") #> # A tibble: 115 × 9 #>    code  name     physical_element_name function_code data_precision description #>    <chr> <chr>    <chr>                 <chr>                  <int> <chr>       #>  1 TAVG  AIR TEM… air temperature       V                          1 Average Ai… #>  2 TMAX  AIR TEM… air temperature       X                          1 Maximum Ai… #>  3 TMIN  AIR TEM… air temperature       N                          1 Minimum Ai… #>  4 TOBS  AIR TEM… air temperature       C                          1 Instantane… #>  5 PRES  BAROMET… barometric pressure   C                          2 Barometric… #>  6 BATT  BATTERY  battery               C                          2 Battery Vo… #>  7 BATV  BATTERY… battery               V                          2 NA          #>  8 BATX  BATTERY… battery               X                          2 Maximum Ba… #>  9 BATN  BATTERY… battery               N                          2 Minimum Ba… #> 10 ETIB  BATTERY… battery-eti precip g… C                          2 NA          #> # ℹ 105 more rows #> # ℹ 3 more variables: stored_unit_code <chr>, english_unit_code <chr>, #> #   metric_unit_code <chr>"},{"path":"https://kbvernon.github.io/awdb/reference/get_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Station Metadata — get_stations","title":"Get Station Metadata — get_stations","text":"Get station metadata USDA National Water Climate Center Air Water Database REST API. includes spatial coordinates.","code":""},{"path":"https://kbvernon.github.io/awdb/reference/get_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Station Metadata — get_stations","text":"","code":"get_stations(aoi = NULL, elements, awdb_options = set_options())"},{"path":"https://kbvernon.github.io/awdb/reference/get_stations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Station Metadata — get_stations","text":"aoi sfc POLYGON scalar, area interest used performing spatial filter available stations network. NULL (default), spatial filter performed. elements character vector, abbreviations codes variables interest (e.g., \"SMS\" \"Soil Moisture Percent\"). See Details available elements codes. awdb_options awdb_options list additional query parameters.","code":""},{"path":"https://kbvernon.github.io/awdb/reference/get_stations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Station Metadata — get_stations","text":"sf table station metadata.","code":""},{"path":"https://kbvernon.github.io/awdb/reference/get_stations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Station Metadata — get_stations","text":"endpoint accept following query parameters via set_options(): station_names dco_codes county_names hucs return_forecast_metadata return_reservoir_metadata return_element_metadata active_only may also specify networks. networks parameter used internally build unique station triplet identifiers form station:state:network, serves filter stations just networks. See set_options() details.","code":""},{"path":"https://kbvernon.github.io/awdb/reference/get_stations.html","id":"element-format","dir":"Reference","previous_headings":"","what":"Element Format","title":"Get Station Metadata — get_stations","text":"Elements specified triplets form elementCode:heightDepth:ordinal. part element triplet can contain * wildcard character. heightDepth ordinal optional. unit heightDepth inches. ordinal specified, assumed 1. examples: \"WTEQ\" - return snow water equivalent values. \"SMS:-8\" - return soil moisture values observed 8 inches surface. \"SMS:*\" - return soil moisture values measured depths.","code":""},{"path":"https://kbvernon.github.io/awdb/reference/get_stations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Station Metadata — get_stations","text":"","code":"# get all stations in aoi get_stations(   bear_lake,   elements = \"*\" ) #> Simple feature collection with 17 features and 14 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -111.7621 ymin: 41.62401 xmax: -110.8724 ymax: 42.4132 #> Geodetic CRS:  WGS 84 #> # A tibble: 17 × 15 #>    station_triplet station_id state_code network_code name  dco_code county_name #>    <chr>           <chr>      <chr>      <chr>        <chr> <chr>    <chr>       #>  1 10055500:ID:BOR 10055500   ID         BOR          Bear… UT       Bear Lake   #>  2 10046500:ID:US… 10046500   ID         USGS         Bear… ID       Bear Lake   #>  3 10113500:UT:US… 10113500   UT         USGS         Blac… UT       Cache       #>  4 374:UT:SNTL     374        UT         SNTL         Bug … UT       Rich        #>  5 471:ID:SNTL     471        ID         SNTL         Emig… ID       Bear Lake   #>  6 484:ID:SNTL     484        ID         SNTL         Fran… UT       Franklin    #>  7 1114:UT:SNTL    1114       UT         SNTL         Gard… UT       Cache       #>  8 493:ID:SNTL     493        ID         SNTL         Give… ID       Bear Lake   #>  9 1115:UT:SNTL    1115       UT         SNTL         Klon… UT       Cache       #> 10 10108400:UT:US… 10108400   UT         USGS         Loga… UT       Cache       #> 11 10069500:ID:BOR 10069500   ID         BOR          Mont… ID       Bear Lake   #> 12 10046000:ID:US… 10046000   ID         USGS         Rain… ID       Bear Lake   #> 13 10032000:WY:US… 10032000   WY         USGS         Smit… UT       Lincoln     #> 14 1013:UT:SNTL    1013       UT         SNTL         Temp… UT       Cache       #> 15 823:UT:SNTL     823        UT         SNTL         Tony… UT       Cache       #> 16 1113:UT:SNTL    1113       UT         SNTL         Tony… UT       Cache       #> 17 1098:UT:SNTL    1098       UT         SNTL         Usu … UT       Rich        #> # ℹ 8 more variables: huc <chr>, elevation <dbl>, data_time_zone <dbl>, #> #   pedon_code <chr>, shef_id <chr>, begin_date <chr>, end_date <chr>, #> #   geometry <POINT [°]>  # get all stations in aoi that measure WTEQ get_stations(   bear_lake,   elements = \"WTEQ\" ) #> Simple feature collection with 10 features and 14 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -111.6296 ymin: 41.68541 xmax: -111.1663 ymax: 42.4132 #> Geodetic CRS:  WGS 84 #> # A tibble: 10 × 15 #>    station_triplet station_id state_code network_code name  dco_code county_name #>    <chr>           <chr>      <chr>      <chr>        <chr> <chr>    <chr>       #>  1 374:UT:SNTL     374        UT         SNTL         Bug … UT       Rich        #>  2 471:ID:SNTL     471        ID         SNTL         Emig… ID       Bear Lake   #>  3 484:ID:SNTL     484        ID         SNTL         Fran… UT       Franklin    #>  4 1114:UT:SNTL    1114       UT         SNTL         Gard… UT       Cache       #>  5 493:ID:SNTL     493        ID         SNTL         Give… ID       Bear Lake   #>  6 1115:UT:SNTL    1115       UT         SNTL         Klon… UT       Cache       #>  7 1013:UT:SNTL    1013       UT         SNTL         Temp… UT       Cache       #>  8 823:UT:SNTL     823        UT         SNTL         Tony… UT       Cache       #>  9 1113:UT:SNTL    1113       UT         SNTL         Tony… UT       Cache       #> 10 1098:UT:SNTL    1098       UT         SNTL         Usu … UT       Rich        #> # ℹ 8 more variables: huc <chr>, elevation <dbl>, data_time_zone <dbl>, #> #   pedon_code <chr>, shef_id <chr>, begin_date <chr>, end_date <chr>, #> #   geometry <POINT [°]>  # get all stations in aoi that are part of SNTL network get_stations(   bear_lake,   elements = \"*\",   awdb_options = set_options(networks = \"SNTL\") ) #> Simple feature collection with 10 features and 14 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -111.6296 ymin: 41.68541 xmax: -111.1663 ymax: 42.4132 #> Geodetic CRS:  WGS 84 #> # A tibble: 10 × 15 #>    station_triplet station_id state_code network_code name  dco_code county_name #>    <chr>           <chr>      <chr>      <chr>        <chr> <chr>    <chr>       #>  1 374:UT:SNTL     374        UT         SNTL         Bug … UT       Rich        #>  2 471:ID:SNTL     471        ID         SNTL         Emig… ID       Bear Lake   #>  3 484:ID:SNTL     484        ID         SNTL         Fran… UT       Franklin    #>  4 1114:UT:SNTL    1114       UT         SNTL         Gard… UT       Cache       #>  5 493:ID:SNTL     493        ID         SNTL         Give… ID       Bear Lake   #>  6 1115:UT:SNTL    1115       UT         SNTL         Klon… UT       Cache       #>  7 1013:UT:SNTL    1013       UT         SNTL         Temp… UT       Cache       #>  8 823:UT:SNTL     823        UT         SNTL         Tony… UT       Cache       #>  9 1113:UT:SNTL    1113       UT         SNTL         Tony… UT       Cache       #> 10 1098:UT:SNTL    1098       UT         SNTL         Usu … UT       Rich        #> # ℹ 8 more variables: huc <chr>, elevation <dbl>, data_time_zone <dbl>, #> #   pedon_code <chr>, shef_id <chr>, begin_date <chr>, end_date <chr>, #> #   geometry <POINT [°]>"},{"path":"https://kbvernon.github.io/awdb/news/index.html","id":"awdb-011","dir":"Changelog","previous_headings":"","what":"awdb 0.1.1","title":"awdb 0.1.1","text":"CRAN release: 2025-02-26 Added web reference API description field DESCRIPTION. Used single quotes around package, software, API names description field DESCRIPTION. Changed start description field Description “Query …”","code":""},{"path":"https://kbvernon.github.io/awdb/news/index.html","id":"awdb-010","dir":"Changelog","previous_headings":"","what":"awdb 0.1.0","title":"awdb 0.1.0","text":"Initial CRAN submission.","code":""}]
